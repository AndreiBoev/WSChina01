<Application x:Class="MarathonChinaApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MarathonChinaApp"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style TargetType="TextBlock" x:Key="FontHeader">
            <Setter Property="FontFamily" Value="Calibri"></Setter>
            <Setter Property="FontSize" Value="30"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="FontBase">
            <Setter Property="FontFamily" Value="Microsoft Sans Serif"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="FontAlternative">
            <Setter Property="FontFamily" Value="Arial"></Setter>
            <Setter Property="FontSize" Value="10"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
        </Style>
        <Style TargetType="Button" x:Key="BtnBase">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Background" Value="#FFEBEBEB"></Setter>
            <Setter Property="FontFamily" Value="Open Sans Light"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="Template" Value="{DynamicResource MyCustomButtonBase}"></Setter>
        </Style>
        <Style TargetType="Image">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Height" Value="20"></Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Width" Value="125"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="FontFamily" Value="Times New Roman"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Width" Value="125"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="FontFamily" Value="Times New Roman"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        </Style>
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="Border" x:Key="BorBase">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="BorderBrush" Value="Gray"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
        </Style>
        <Style TargetType="TabControl" x:Key="TabConBase">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Width" Value="750"></Setter>
            <Setter Property="Height" Value="380"></Setter>
        </Style>
        <ControlTemplate x:Key="MyCustomButtonBase" TargetType="{x:Type Button}">
            <Border x:Name="border" CornerRadius="15" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>
</Application>
